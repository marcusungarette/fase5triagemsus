spring:
  application:
    name: triage-ai-sus

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true

  redis:
    host: localhost
    port: 6379
    password: redis123
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

  jackson:
    time-zone: America/Sao_Paulo
    date-format: yyyy-MM-dd'T'HH:mm:ss
    serialization:
      write-dates-as-timestamps: false

server:
  port: 8080
  servlet:
    context-path: /api/v1

logging:
  level:
    br.com.fiap: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/triage-ai.log

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,redis
  endpoint:
    health:
      show-details: always

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
  show-actuator: true

triage:
  ai:
    gemini:
      api-key: ${GEMINI_API_KEY}
      base-url: https://generativelanguage.googleapis.com/v1beta
      model: gemini-1.5-pro
      timeout: 30s
      max-retries: 3
      temperature: 0.2
      max-tokens: 1000

  business:
    max-symptoms-per-request: 10
    cache-ttl: 300
    min-age: 0
    max-age: 120
    max-processing-time-seconds: 60

  queue:
    max-retries: 3
    retry-delay-seconds: 30
    processing-timeout-minutes: 10
    cleanup-interval-minutes: 30
    batch-size: 10
    consumer-threads: 3

---
spring:
  config:
    activate:
      on-profile: docker

  datasource:
    url: jdbc:postgresql://postgres:5432/postgres

  redis:
    host: redis
    port: 6379
    password: redis123

---
spring:
  config:
    activate:
      on-profile: test

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

  redis:
    host: localhost
    port: 6370
    password: